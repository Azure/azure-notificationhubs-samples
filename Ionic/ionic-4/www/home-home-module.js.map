{"version":3,"sources":["webpack:///./src/app/home/home.module.ts","webpack:///./src/app/home/home.page.html","webpack:///./src/app/home/home.page.scss","webpack:///./src/app/home/home.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACA;AACE;AAER;AAgBvC;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAd1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC;oBACpB;wBACE,IAAI,EAAE,EAAE;wBACR,SAAS,EAAE,mDAAQ;qBACpB;iBACF,CAAC;aACH;YACD,YAAY,EAAE,CAAC,mDAAQ,CAAC;SACzB,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;ACtB3B,qPAAqP,2DAA2D,0GAA0G,0EAA0E,6CAA6C,oBAAoB,kBAAkB,yE;;;;;;;;;;;ACAvjB,+DAA+D,mI;;;;;;;;;;;;;;;;;;;;ACArB;AACa;AAEvD,2BAA2B;AACkD;AACc;AAO3F;IAIE,kBACS,MAAc,EACd,WAAyC,EACzC,GAAkB;QAH3B,iBAeC;QAdQ,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAA8B;QACzC,QAAG,GAAH,GAAG,CAAe;QALnB,cAAS,GAAoC,EAAE,CAAC;QAOtD,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QAEpC,kEAAkE;QAClE,gBAAgB;QAChB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,kBAAkB,EAAE;YACxC,0EAA0E;YAC1E,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;YACpD,8CAA8C;YAC9C,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4BAAS,GAAT,UAAU,QAAqC,EAAE,GAAW;QAC1D,OAAO,CAAC,GAAG,CAAC,yBAAuB,GAAG,MAAG,CAAC,CAAC;QAC3C,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,iCAAiC;QACjC,IAAI,QAAQ,CAAC,IAAI,KAAK,4DAAS,CAAC,YAAY,EAAE;YAC5C,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;YACpD,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,mBAAiB,GAAK,CAAC,CAAC;SAClD;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;YACpD,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,mBAAiB,GAAK,CAAC,CAAC;SAClD;IACH,CAAC;IAhCU,QAAQ;QALpB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,sFAA6B;;SAE9B,CAAC;+EAMiB,qDAAM;YACD,sGAA4B;YACpC,4DAAa;OAPhB,QAAQ,CAkCpB;IAAD,eAAC;CAAA;AAlCoB","file":"home-home-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { HomePage } from './home.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomePage\n      }\n    ])\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title> Azure Notification Hubs (Ionic 4) </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-list>\\n    <ion-list-header no-padding>\\n      {{ eventList.length ? 'Events': 'Waiting for registration' }}\\n    </ion-list-header>\\n    <ion-item (click)=\\\"viewEvent(event, idx)\\\" *ngFor=\\\"let event of eventList; let idx= index\\\" no-padding>\\n      <ion-label text-wrap>\\n        <h2>{{ event.type == 1 ? 'Notification': 'Event' }}</h2>\\n        <p>{{ event.received }}</p>\\n      </ion-label>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5wYWdlLnNjc3MifQ== */\"","import { Component } from '@angular/core';\nimport { Events, NavController } from '@ionic/angular';\n\n// Interfaces and Providers\nimport { EventType, Registration, Notification } from '../interfaces/events';\nimport { AzureNotificationHubsService } from '../services/azure-notification-hubs.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n\n  private eventList: (Registration | Notification)[] = [];\n\n  constructor(\n    public events: Events,\n    public pushService: AzureNotificationHubsService,\n    public nav: NavController\n  ) {\n    console.log('HomePage constructor');\n\n    // The provider (AzureNotificationHubs) fires an event whenever it\n    // gets new data\n    this.events.subscribe('anh: data-change', () => {\n      // Update our local copy of the event data when it changes in the provider\n      console.log('HomePage: event data change detected');\n      // Get the current event list from the service\n      this.eventList = this.pushService.pushEvents;\n    });\n  }\n\n  viewEvent(theEvent: Registration | Notification, idx: number) {\n    console.log(`HomePage: viewEvent(${idx})`);\n    console.dir(theEvent);\n    // What type of event do we have?\n    if (theEvent.type === EventType.registration) {\n      console.log('HomePage: Opening Registration Event');\n      this.nav.navigateForward(`/registration/${idx}`);\n    } else {\n      console.log('HomePage: Opening Notification Event');\n      this.nav.navigateForward(`/notification/${idx}`);\n    }\n  }\n\n}\n"],"sourceRoot":""}