{"version":3,"sources":["webpack:///./src/app/notification-event/notification-event.module.ts","webpack:///./src/app/notification-event/notification-event.page.html","webpack:///./src/app/notification-event/notification-event.page.scss","webpack:///./src/app/notification-event/notification-event.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEqB;AAElE,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8EAAqB;KACjC;CACF,CAAC;AAWF;IAAA;IAA0C,CAAC;IAA9B,2BAA2B;QATvC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,8EAAqB,CAAC;SACtC,CAAC;OACW,2BAA2B,CAAG;IAAD,kCAAC;CAAA;AAAH;;;;;;;;;;;;ACzBxC,weAAwe,gBAAgB,wKAAwK,aAAa,8KAA8K,gBAAgB,sKAAsK,YAAY,wKAAwK,aAAa,sLAAsL,oBAAoB,sKAAsK,YAAY,sLAAsL,oBAAoB,sKAAsK,YAAY,2E;;;;;;;;;;;ACA18D,+DAA+D,uK;;;;;;;;;;;;;;;;;;;;;ACAb;AACH;AACE;AAE4B;AACc;AAO3F;IAkBE,+BACS,OAAsB,EACtB,WAAyC,EACxC,KAAqB;QAFtB,YAAO,GAAP,OAAO,CAAe;QACtB,gBAAW,GAAX,WAAW,CAA8B;QACxC,UAAK,GAAL,KAAK,CAAgB;QAnBvB,UAAK,GAAiB;YAC5B,sDAAsD;YACtD,qCAAqC;YACrC,IAAI,EAAE,4DAAS,CAAC,YAAY;YAC5B,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;YACZ,IAAI,EAAE,EAAE;YACR,EAAE,EAAE,EAAE;YACN,KAAK,EAAE,CAAC;YACR,YAAY,EAAE,EAAE;YAChB,IAAI,EAAE,EAAE;YACR,YAAY,EAAE,EAAE;YAChB,IAAI,EAAE,EAAE;YACR,QAAQ,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;SAC/B,CAAC;IAME,CAAC;IAEL,wCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;QACjD,sCAAsC;QACtC,IAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;QAClE,qCAAqC;QACrC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,CAAiB,CAAC;IAChE,CAAC;IA9BU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;YAClC,gIAA6C;;SAE9C,CAAC;+EAoBkB,4DAAa;YACT,sGAA4B;YACjC,8DAAc;OArBpB,qBAAqB,CAgCjC;IAAD,4BAAC;CAAA;AAhCiC","file":"notification-event-notification-event-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NotificationEventPage } from './notification-event.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotificationEventPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [NotificationEventPage]\n})\nexport class NotificationEventPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Azure Notification Hubs (Ionic 4)</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-list>\\n    <ion-list-header no-padding>\\n      Notification Event\\n    </ion-list-header>\\n    <ion-item text-wrap no-padding>\\n      <ion-label text-wrap>\\n        <h2>Received</h2>\\n        <p>{{event.received}}</p>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item text-wrap no-padding *ngIf=\\\"event.title\\\">\\n      <ion-label text-wrap>\\n        <h2>Title</h2>\\n        <p>{{event.title}}</p>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item text-wrap no-padding *ngIf=\\\"event.subtitle\\\">\\n      <ion-label text-wrap>\\n        <h2>Subtitle</h2>\\n        <p>{{event.subtitle}}</p>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item text-wrap no-padding *ngIf=\\\"event.body\\\">\\n      <ion-label text-wrap>\\n        <h2>Body</h2>\\n        <p>{{event.body}}</p>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item text-wrap no-padding *ngIf=\\\"event.badge\\\">\\n      <ion-label text-wrap>\\n        <h2>Badge</h2>\\n        <p>{{event.badge}}</p>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item text-wrap no-padding *ngIf=\\\"event.notification\\\">\\n      <ion-label text-wrap>\\n        <h2>Notification</h2>\\n        <p>{{event.notification}}</p>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item text-wrap no-padding *ngIf=\\\"event.data\\\">\\n      <ion-label text-wrap>\\n        <h2>Data</h2>\\n        <p>{{event.data}}</p>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item text-wrap no-padding *ngIf=\\\"event.click_action\\\">\\n      <ion-label text-wrap>\\n        <h2>Click Action</h2>\\n        <p>{{event.click_action}}</p>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item text-wrap no-padding *ngIf=\\\"event.link\\\">\\n      <ion-label text-wrap>\\n        <h2>Link</h2>\\n        <p>{{event.link}}</p>\\n      </ion-label>\\n    </ion-item>\\n  </ion-list>\\n\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdGlmaWNhdGlvbi1ldmVudC9ub3RpZmljYXRpb24tZXZlbnQucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { EventType, Registration, Notification } from '../interfaces/events';\nimport { AzureNotificationHubsService } from '../services/azure-notification-hubs.service';\n\n@Component({\n  selector: 'app-notification-event',\n  templateUrl: './notification-event.page.html',\n  styleUrls: ['./notification-event.page.scss'],\n})\nexport class NotificationEventPage implements OnInit {\n\n  private event: Notification = {\n    // initialize as empty object just to start, otherwise\n    // the .html page will crash on load.\n    type: EventType.notification,\n    title: '',\n    subtitle: '',\n    body: '',\n    id: '',\n    badge: 0,\n    notification: '',\n    data: {},\n    click_action: '',\n    link: '',\n    received: new Date(Date.now())\n  };\n\n  constructor(\n    public navCtrl: NavController,\n    public pushService: AzureNotificationHubsService,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    console.log('NotificationEventPage: ngOnInit()');\n    // Get the index from the Query String\n    const idx = parseInt(this.route.snapshot.paramMap.get('idx'), 10);\n    // Grab that item from the event list\n    this.event = this.pushService.pushEvents[idx] as Notification;\n  }\n\n}\n"],"sourceRoot":""}